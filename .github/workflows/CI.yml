name: CI Pipeline

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  linting_building_unit-testing:
    name: Linting and unit testing

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout Repositary
        uses: actions/checkout@v3

      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Lint Code
        run: npm run lint

      - name: Build Code
        run: npm run build --if-present

      - name: Test Code
        run: npm run test:unit

  linting_building_integration-testing:
    name: Linting and integration testing

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: localUser
          POSTGRES_PASSWORD: localhostPassword
          POSTGRES_DATABASE: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg-isready
          --health-interval 10s
          --health-timeout 5s 
          --health-retries 5

    steps:
      - name: Checkout Repositary
        uses: actions/checkout@v3

      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Lint Code
        run: npm run lint

      - name: Build Code
        run: npm run build --if-present

      - name: Test Code
        env:
          DATABASE_URL: postgres://localUser:localhostPassword@localhost:5432/test
          PORT: 3003
          DB_HOST: localhost
          DB_USER: localUser
          DB_PASSWORD: localhostPassword
          DB_PORT: 5432
          DB_DATABASE: test
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          PUBLIC_KEY: ${{ secrets.PUBLIC_KEY }}
          CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
          DEFAULT_GMAIL: ${{ secrets.DEFAULT_GMAIL }}
          GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}
          STRIPE_SECRET: ${{ secrets.STRIPE_SECRET }}

        run: npm run migrate up
          npm run test:integration
